<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

	<!--静态资源放行 -->
	<http pattern="/staticfile/**" security="none"></http>

	<!--放行登陆页面 -->
	<http pattern="/login.jsp" security="none"></http>

	<http pattern="/favicon.jsp" security="none"></http>

	<http pattern="/accessDenied.jsp" security="none"></http>

	<!-- 当访问被拒绝时，会转到403.jsp -->
	<http access-denied-page="/WEB-INF/error/403.jsp" pattern="/*.htm*">
		<!-- 登陆设置 -->
		<form-login login-page="/login.jsp" username-parameter="loginName"
			password-parameter="password" login-processing-url="/login.htm"
			authentication-failure-url="/login.jsp?sign=BadCredentials"
			default-target-url="/index.htm" always-use-default-target="true"
			authentication-failure-handler-ref="exceptionMappingAuthenticationFailureHandler" />
			
		<!-- 匿名用户访问控制，这里设置不允许匿名用户登陆 -->
		<anonymous enabled="false" />
		<!-- 登出设置 -->
		<logout logout-success-url="/login.jsp" logout-url="/logout.htm" />
		<http-basic />
		<!-- 增加一个filter，位于FILTER_SECURITY_INTERCEPTOR之前 -->
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="customizedFilter" />
		<session-management
			session-authentication-strategy-ref="sas"></session-management>
	</http>

	<beans:bean id="sas"
		class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy"></beans:bean>


	<!-- 认证管理器.用户登陆认证的入口, 加载用户角色。 -->
	<authentication-manager alias="authenticationManagerBean">
		<authentication-provider ref="authenticationProvider">
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="authenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userDetailsService"></beans:property>
		<beans:property name="hideUserNotFoundExceptions"
			value="false"></beans:property>
		<beans:property name="passwordEncoder" ref="passwordEncoder"></beans:property>
		<!-- 加密的加盐处理，当然存储的密码也是加盐了，加盐后的被加密串格式：password{salt} 。 -->
		<beans:property name="saltSource">
			<beans:bean
				class="org.springframework.security.authentication.dao.ReflectionSaltSource">
				<beans:property name="userPropertyToUse">
					username
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<b:bean id="userDetailsService"
		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<b:property name="dataSource" ref="dataSourceOracle" />

		<b:property name="usersByUsernameQuery"
			value="SELECT username, password, enable FROM user WHERE username=? AND enable=true;" />

		<b:property name="authoritiesByUsernameQuery"
			value="SELECT u.username username, r.rolename rolename FROM user u, role r,   
   user_role ur WHERE u.username=? AND u.id = ur.user_id AND ur.role_id = r.id;" />

	</b:bean>

	<!-- 用户的密码加密方式 -->
	<b:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<b:constructor-arg index="0" value="256" />
		<b:property name="encodeHashAsBase64" value="true" />
	</b:bean>

	<!-- 访问决策器，决定某个用户（具有的角色）是否有足够的权限去访问某个资源 -->
	<b:bean id="accessDecisionManagerBean" class="sec.CustomizedAccessDecisionManager">
		<!-- 没有显式定义的资源都保护起来。该属性默认值为false -->
		<b:property name="allowIfAllAbstainDecisions" value="false" />
	</b:bean>

	<!-- 安全资源定义，即定义某一安全资源可以被哪些角色访问 -->
	<b:bean id="securityMetadataSourceBean" class="sec.CustomizedInvocationSecurityMetadataSource">
		<b:constructor-arg index="0" ref="commonDao" />
		<b:property name="rejectPublicInvocations" value="true" />
	</b:bean>

	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性 -->
	<b:bean id="customizedFilter" class="sec.CustomizedFilterSecurityInterceptor">
		<b:property name="authenticationManager" ref="authenticationManagerBean" />
		<b:property name="accessDecisionManager" ref="accessDecisionManagerBean" />
		<b:property name="securityMetadataSource" ref="securityMetadataSourceBean" />

	</b:bean>
	
	
	<beans:bean id="myAuthFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="sessionAuthenticationStrategy"
			ref="sas" />
		<beans:property name="authenticationManager" ref="authenticationManagerBean" />
	</beans:bean>



	<!-- 认证异常处理 -->
	<b:bean id="exceptionMappingAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
		<b:property name="exceptionMappings">
			<b:map>
				<!-- 用户不存在 -->
				<b:entry
					key="org.springframework.security.core.userdetails.UsernameNotFoundException"
					value="/login.jsp?sign=No User" />
				<!-- 凭证错误(密码不正确) -->
				<b:entry
					key="org.springframework.security.authentication.BadCredentialsException"
					value="/login.jsp?sign=Bad Credentials" />
				<!-- 用户不可用 -->
				<b:entry
					key="org.springframework.security.authentication.DisabledException"
					value="/login.jsp?sign=User is disabled" />
				<!-- 登陆凭证错误 -->
				<b:entry key="org.springframework.security.core.AuthenticationException"
					value="/login.jsp?sign=Authentication Failure" />
			</b:map>
		</b:property>
	</b:bean>

	<!-- 安全资源白名单(URL) -->
	<b:bean id="securityMetadataSourceTrustListHolder" class="sec.SecurityMetadataSourceTrustListHolder">
		<b:property name="trustList">
			<b:list>
				<b:value>/index.htm</b:value>
				<b:value>/hello.htm</b:value>
			</b:list>
		</b:property>
	</b:bean>

	<!-- 安全用户白名单 -->
	<b:bean id="securityUserTrustListHolder" class="sec.SecurityUserTrustListHolder">
		<b:property name="trustList">
			<b:list>
				<b:value>administrator</b:value>
			</b:list>
		</b:property>
	</b:bean>

	<!-- 开启Spring Security3认证和授权日志 -->
	<b:bean
		class="org.springframework.security.authentication.event.LoggerListener" />
	<b:bean class="org.springframework.security.access.event.LoggerListener" />


</beans:beans>

